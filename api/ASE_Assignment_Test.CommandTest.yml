### YamlMime:ManagedReference
items:
- uid: ASE_Assignment_Test.CommandTest
  commentId: T:ASE_Assignment_Test.CommandTest
  id: CommandTest
  parent: ASE_Assignment_Test
  children:
  - ASE_Assignment_Test.CommandTest.Setup
  - ASE_Assignment_Test.CommandTest.Test_ArrayCommand_Restricted
  - ASE_Assignment_Test.CommandTest.Test_ArrayCommand_UnRestricted
  - ASE_Assignment_Test.CommandTest.Test_ForCommand_Restricted
  - ASE_Assignment_Test.CommandTest.Test_ForCommand_Unrestricted
  - ASE_Assignment_Test.CommandTest.Test_IFCommand_Restricted
  - ASE_Assignment_Test.CommandTest.Test_IFCommand_Unrestricted
  - ASE_Assignment_Test.CommandTest.Test_IntCommand_Restricted
  - ASE_Assignment_Test.CommandTest.Test_IntCommand_UnRestricted
  - ASE_Assignment_Test.CommandTest.Test_MethodCommand_UnRestricted
  - ASE_Assignment_Test.CommandTest.Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  - ASE_Assignment_Test.CommandTest.Test_ProgramSizeCommand_UnRestricted
  - ASE_Assignment_Test.CommandTest.Test_RealCommand_Restricted
  - ASE_Assignment_Test.CommandTest.Test_RealCommand_Unrestricted
  - ASE_Assignment_Test.CommandTest.Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg
  - ASE_Assignment_Test.CommandTest.Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  - ASE_Assignment_Test.CommandTest.Test_WhileCommand_Restricted
  - ASE_Assignment_Test.CommandTest.Test_WhileCommand_Unrestricted
  langs:
  - csharp
  - vb
  name: CommandTest
  nameWithType: CommandTest
  fullName: ASE_Assignment_Test.CommandTest
  type: Class
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: CommandTest
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 26
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  syntax:
    content: >-
      [TestClass]

      public class CommandTest
    content.vb: >-
      <TestClass>

      Public Class CommandTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Setup
  commentId: M:ASE_Assignment_Test.CommandTest.Setup
  id: Setup
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: CommandTest.Setup()
  fullName: ASE_Assignment_Test.CommandTest.Setup()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Setup
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 84
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  syntax:
    content: >-
      [TestInitialize]

      public void Setup()
    content.vb: >-
      <TestInitialize>

      Public Sub Setup()
  overload: ASE_Assignment_Test.CommandTest.Setup*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg
  commentId: M:ASE_Assignment_Test.CommandTest.Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg
  id: Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg()
  nameWithType: CommandTest.Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg()
  fullName: ASE_Assignment_Test.CommandTest.Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 106
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  syntax:
    content: >-
      [TestMethod]

      public void Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg()
    content.vb: >-
      <TestMethod>

      Public Sub Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg()
  overload: ASE_Assignment_Test.CommandTest.Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  commentId: M:ASE_Assignment_Test.CommandTest.Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  id: Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg()
  nameWithType: CommandTest.Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg()
  fullName: ASE_Assignment_Test.CommandTest.Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 135
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests that running a single command does not change the global output exception message.
  remarks: Validates that even when a single valid command is executed, no exception is thrown during execution.
  example:
  - >-
    This test runs a single `moveto` command and verifies that no exception is thrown:

    <pre><code class="lang-csharp">mockParser.ParseProgram("moveto 100,100");

    program.Run();

    Assert.IsTrue(true, "No exception should be thrown when a valid single command is executed.");</code></pre>
  syntax:
    content: >-
      [TestMethod]

      public void Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg()
    content.vb: >-
      <TestMethod>

      Public Sub Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg()
  overload: ASE_Assignment_Test.CommandTest.Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  commentId: M:ASE_Assignment_Test.CommandTest.Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  id: Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg()
  nameWithType: CommandTest.Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg()
  fullName: ASE_Assignment_Test.CommandTest.Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 153
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Verifies that running multiple commands does not alter the global output or throw any exceptions.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg()
    content.vb: >-
      <TestMethod>

      Public Sub Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg()
  overload: ASE_Assignment_Test.CommandTest.Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_IFCommand_Unrestricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_IFCommand_Unrestricted
  id: Test_IFCommand_Unrestricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_IFCommand_Unrestricted()
  nameWithType: CommandTest.Test_IFCommand_Unrestricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_IFCommand_Unrestricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_IFCommand_Unrestricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 171
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of an unrestricted if-statement command and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_IFCommand_Unrestricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_IFCommand_Unrestricted()
  overload: ASE_Assignment_Test.CommandTest.Test_IFCommand_Unrestricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_IFCommand_Restricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_IFCommand_Restricted
  id: Test_IFCommand_Restricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_IFCommand_Restricted()
  nameWithType: CommandTest.Test_IFCommand_Restricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_IFCommand_Restricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_IFCommand_Restricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 189
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of an unrestricted if-statement command and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_IFCommand_Restricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_IFCommand_Restricted()
  overload: ASE_Assignment_Test.CommandTest.Test_IFCommand_Restricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_WhileCommand_Unrestricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_WhileCommand_Unrestricted
  id: Test_WhileCommand_Unrestricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_WhileCommand_Unrestricted()
  nameWithType: CommandTest.Test_WhileCommand_Unrestricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_WhileCommand_Unrestricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_WhileCommand_Unrestricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 207
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of an unrestricted while-loop command and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_WhileCommand_Unrestricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_WhileCommand_Unrestricted()
  overload: ASE_Assignment_Test.CommandTest.Test_WhileCommand_Unrestricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_WhileCommand_Restricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_WhileCommand_Restricted
  id: Test_WhileCommand_Restricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_WhileCommand_Restricted()
  nameWithType: CommandTest.Test_WhileCommand_Restricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_WhileCommand_Restricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_WhileCommand_Restricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 225
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of a restricted while-loop command and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_WhileCommand_Restricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_WhileCommand_Restricted()
  overload: ASE_Assignment_Test.CommandTest.Test_WhileCommand_Restricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_ForCommand_Restricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_ForCommand_Restricted
  id: Test_ForCommand_Restricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_ForCommand_Restricted()
  nameWithType: CommandTest.Test_ForCommand_Restricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_ForCommand_Restricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_ForCommand_Restricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 243
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of a restricted for-loop command and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_ForCommand_Restricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_ForCommand_Restricted()
  overload: ASE_Assignment_Test.CommandTest.Test_ForCommand_Restricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_ForCommand_Unrestricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_ForCommand_Unrestricted
  id: Test_ForCommand_Unrestricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_ForCommand_Unrestricted()
  nameWithType: CommandTest.Test_ForCommand_Unrestricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_ForCommand_Unrestricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_ForCommand_Unrestricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 262
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of an unrestricted for-loop command and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_ForCommand_Unrestricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_ForCommand_Unrestricted()
  overload: ASE_Assignment_Test.CommandTest.Test_ForCommand_Unrestricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_RealCommand_Unrestricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_RealCommand_Unrestricted
  id: Test_RealCommand_Unrestricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_RealCommand_Unrestricted()
  nameWithType: CommandTest.Test_RealCommand_Unrestricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_RealCommand_Unrestricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_RealCommand_Unrestricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 281
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of unrestricted real-number commands and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_RealCommand_Unrestricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_RealCommand_Unrestricted()
  overload: ASE_Assignment_Test.CommandTest.Test_RealCommand_Unrestricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_RealCommand_Restricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_RealCommand_Restricted
  id: Test_RealCommand_Restricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_RealCommand_Restricted()
  nameWithType: CommandTest.Test_RealCommand_Restricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_RealCommand_Restricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_RealCommand_Restricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 299
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of restricted real-number commands and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_RealCommand_Restricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_RealCommand_Restricted()
  overload: ASE_Assignment_Test.CommandTest.Test_RealCommand_Restricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_IntCommand_Restricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_IntCommand_Restricted
  id: Test_IntCommand_Restricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_IntCommand_Restricted()
  nameWithType: CommandTest.Test_IntCommand_Restricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_IntCommand_Restricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_IntCommand_Restricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 318
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of restricted integer commands and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_IntCommand_Restricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_IntCommand_Restricted()
  overload: ASE_Assignment_Test.CommandTest.Test_IntCommand_Restricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_IntCommand_UnRestricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_IntCommand_UnRestricted
  id: Test_IntCommand_UnRestricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_IntCommand_UnRestricted()
  nameWithType: CommandTest.Test_IntCommand_UnRestricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_IntCommand_UnRestricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_IntCommand_UnRestricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 336
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of unrestricted integer commands and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_IntCommand_UnRestricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_IntCommand_UnRestricted()
  overload: ASE_Assignment_Test.CommandTest.Test_IntCommand_UnRestricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_ArrayCommand_Restricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_ArrayCommand_Restricted
  id: Test_ArrayCommand_Restricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_ArrayCommand_Restricted()
  nameWithType: CommandTest.Test_ArrayCommand_Restricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_ArrayCommand_Restricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_ArrayCommand_Restricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 354
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of restricted array commands and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_ArrayCommand_Restricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_ArrayCommand_Restricted()
  overload: ASE_Assignment_Test.CommandTest.Test_ArrayCommand_Restricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_ArrayCommand_UnRestricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_ArrayCommand_UnRestricted
  id: Test_ArrayCommand_UnRestricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_ArrayCommand_UnRestricted()
  nameWithType: CommandTest.Test_ArrayCommand_UnRestricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_ArrayCommand_UnRestricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_ArrayCommand_UnRestricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 372
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of unrestricted array commands and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_ArrayCommand_UnRestricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_ArrayCommand_UnRestricted()
  overload: ASE_Assignment_Test.CommandTest.Test_ArrayCommand_UnRestricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_MethodCommand_UnRestricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_MethodCommand_UnRestricted
  id: Test_MethodCommand_UnRestricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_MethodCommand_UnRestricted()
  nameWithType: CommandTest.Test_MethodCommand_UnRestricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_MethodCommand_UnRestricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_MethodCommand_UnRestricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 391
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of unrestricted method execution commands and ensures no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_MethodCommand_UnRestricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_MethodCommand_UnRestricted()
  overload: ASE_Assignment_Test.CommandTest.Test_MethodCommand_UnRestricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandTest.Test_ProgramSizeCommand_UnRestricted
  commentId: M:ASE_Assignment_Test.CommandTest.Test_ProgramSizeCommand_UnRestricted
  id: Test_ProgramSizeCommand_UnRestricted
  parent: ASE_Assignment_Test.CommandTest
  langs:
  - csharp
  - vb
  name: Test_ProgramSizeCommand_UnRestricted()
  nameWithType: CommandTest.Test_ProgramSizeCommand_UnRestricted()
  fullName: ASE_Assignment_Test.CommandTest.Test_ProgramSizeCommand_UnRestricted()
  type: Method
  source:
    remote:
      path: ASE_Assignment_Test/CommandTest.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Prapti-Acharya.git
    id: Test_ProgramSizeCommand_UnRestricted
    path: ASE_Assignment_Test/CommandTest.cs
    startLine: 411
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test
  summary: Tests the behavior of a program with a large number of commands, ensuring no exceptions are thrown during execution.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Test_ProgramSizeCommand_UnRestricted()
    content.vb: >-
      <TestMethod>

      Public Sub Test_ProgramSizeCommand_UnRestricted()
  overload: ASE_Assignment_Test.CommandTest.Test_ProgramSizeCommand_UnRestricted*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
references:
- uid: ASE_Assignment_Test
  commentId: N:ASE_Assignment_Test
  href: ASE_Assignment_Test.html
  name: ASE_Assignment_Test
  nameWithType: ASE_Assignment_Test
  fullName: ASE_Assignment_Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ASE_Assignment_Test.CommandTest.Setup*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Setup
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Setup
  name: Setup
  nameWithType: CommandTest.Setup
  fullName: ASE_Assignment_Test.CommandTest.Setup
- uid: ASE_Assignment_Test.CommandTest.Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg
  name: Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg
  nameWithType: CommandTest.Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg
  fullName: ASE_Assignment_Test.CommandTest.Test_RunProgram_ShouldNotChangeGlobalOutputExceptionMsg
- uid: ASE_Assignment_Test.CommandTest.Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  name: Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  nameWithType: CommandTest.Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  fullName: ASE_Assignment_Test.CommandTest.Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg
- uid: ASE_Assignment_Test.CommandTest.Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  name: Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  nameWithType: CommandTest.Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg
  fullName: ASE_Assignment_Test.CommandTest.Test_MultipleCommand_ShouldNotChangeGlobalOutputExceptionMsg
- uid: ASE_Assignment_Test.CommandTest.Test_IFCommand_Unrestricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_IFCommand_Unrestricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_IFCommand_Unrestricted
  name: Test_IFCommand_Unrestricted
  nameWithType: CommandTest.Test_IFCommand_Unrestricted
  fullName: ASE_Assignment_Test.CommandTest.Test_IFCommand_Unrestricted
- uid: ASE_Assignment_Test.CommandTest.Test_IFCommand_Restricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_IFCommand_Restricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_IFCommand_Restricted
  name: Test_IFCommand_Restricted
  nameWithType: CommandTest.Test_IFCommand_Restricted
  fullName: ASE_Assignment_Test.CommandTest.Test_IFCommand_Restricted
- uid: ASE_Assignment_Test.CommandTest.Test_WhileCommand_Unrestricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_WhileCommand_Unrestricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_WhileCommand_Unrestricted
  name: Test_WhileCommand_Unrestricted
  nameWithType: CommandTest.Test_WhileCommand_Unrestricted
  fullName: ASE_Assignment_Test.CommandTest.Test_WhileCommand_Unrestricted
- uid: ASE_Assignment_Test.CommandTest.Test_WhileCommand_Restricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_WhileCommand_Restricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_WhileCommand_Restricted
  name: Test_WhileCommand_Restricted
  nameWithType: CommandTest.Test_WhileCommand_Restricted
  fullName: ASE_Assignment_Test.CommandTest.Test_WhileCommand_Restricted
- uid: ASE_Assignment_Test.CommandTest.Test_ForCommand_Restricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_ForCommand_Restricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_ForCommand_Restricted
  name: Test_ForCommand_Restricted
  nameWithType: CommandTest.Test_ForCommand_Restricted
  fullName: ASE_Assignment_Test.CommandTest.Test_ForCommand_Restricted
- uid: ASE_Assignment_Test.CommandTest.Test_ForCommand_Unrestricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_ForCommand_Unrestricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_ForCommand_Unrestricted
  name: Test_ForCommand_Unrestricted
  nameWithType: CommandTest.Test_ForCommand_Unrestricted
  fullName: ASE_Assignment_Test.CommandTest.Test_ForCommand_Unrestricted
- uid: ASE_Assignment_Test.CommandTest.Test_RealCommand_Unrestricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_RealCommand_Unrestricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_RealCommand_Unrestricted
  name: Test_RealCommand_Unrestricted
  nameWithType: CommandTest.Test_RealCommand_Unrestricted
  fullName: ASE_Assignment_Test.CommandTest.Test_RealCommand_Unrestricted
- uid: ASE_Assignment_Test.CommandTest.Test_RealCommand_Restricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_RealCommand_Restricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_RealCommand_Restricted
  name: Test_RealCommand_Restricted
  nameWithType: CommandTest.Test_RealCommand_Restricted
  fullName: ASE_Assignment_Test.CommandTest.Test_RealCommand_Restricted
- uid: ASE_Assignment_Test.CommandTest.Test_IntCommand_Restricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_IntCommand_Restricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_IntCommand_Restricted
  name: Test_IntCommand_Restricted
  nameWithType: CommandTest.Test_IntCommand_Restricted
  fullName: ASE_Assignment_Test.CommandTest.Test_IntCommand_Restricted
- uid: ASE_Assignment_Test.CommandTest.Test_IntCommand_UnRestricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_IntCommand_UnRestricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_IntCommand_UnRestricted
  name: Test_IntCommand_UnRestricted
  nameWithType: CommandTest.Test_IntCommand_UnRestricted
  fullName: ASE_Assignment_Test.CommandTest.Test_IntCommand_UnRestricted
- uid: ASE_Assignment_Test.CommandTest.Test_ArrayCommand_Restricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_ArrayCommand_Restricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_ArrayCommand_Restricted
  name: Test_ArrayCommand_Restricted
  nameWithType: CommandTest.Test_ArrayCommand_Restricted
  fullName: ASE_Assignment_Test.CommandTest.Test_ArrayCommand_Restricted
- uid: ASE_Assignment_Test.CommandTest.Test_ArrayCommand_UnRestricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_ArrayCommand_UnRestricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_ArrayCommand_UnRestricted
  name: Test_ArrayCommand_UnRestricted
  nameWithType: CommandTest.Test_ArrayCommand_UnRestricted
  fullName: ASE_Assignment_Test.CommandTest.Test_ArrayCommand_UnRestricted
- uid: ASE_Assignment_Test.CommandTest.Test_MethodCommand_UnRestricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_MethodCommand_UnRestricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_MethodCommand_UnRestricted
  name: Test_MethodCommand_UnRestricted
  nameWithType: CommandTest.Test_MethodCommand_UnRestricted
  fullName: ASE_Assignment_Test.CommandTest.Test_MethodCommand_UnRestricted
- uid: ASE_Assignment_Test.CommandTest.Test_ProgramSizeCommand_UnRestricted*
  commentId: Overload:ASE_Assignment_Test.CommandTest.Test_ProgramSizeCommand_UnRestricted
  href: ASE_Assignment_Test.CommandTest.html#ASE_Assignment_Test_CommandTest_Test_ProgramSizeCommand_UnRestricted
  name: Test_ProgramSizeCommand_UnRestricted
  nameWithType: CommandTest.Test_ProgramSizeCommand_UnRestricted
  fullName: ASE_Assignment_Test.CommandTest.Test_ProgramSizeCommand_UnRestricted
